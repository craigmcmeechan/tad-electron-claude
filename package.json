{
  "name": "tad",
  "displayName": "Tad",
  "description": "Template-assisted design for developers",
  "version": "0.0.11",
  "publisher": "kiraboshi",
  "author": "kira boshi",
  "repository": {
    "type": "git",
    "url": "https://github.com/kiraboshi/tad"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "keywords": [
    "design",
    "ui",
    "mockup",
    "wireframe",
    "component",
    "ai",
    "agent",
    "figma",
    "prototype",
    "layout",
    "frontend",
    "react",
    "html",
    "css",
    "generator",
    "automation"
  ],
  "activationEvents": [
    "onCommand:tad.helloWorld",
    "onCommand:tad.buildTemplates",
    "onCommand:tad.createTemplateSpace",
    "onView:tad.chatView",
    "onLanguage:nunjucks"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "nunjucks",
        "aliases": [
          "Nunjucks",
          "njk"
        ],
        "extensions": [
          ".njk",
          ".nunjucks"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "nunjucks",
        "scopeName": "text.html.nunjucks",
        "path": "./syntaxes/nunjucks.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "tad.helloWorld",
        "title": "Hello World",
        "category": "tad"
      },
      {
        "command": "tad.buildTemplates",
        "title": "Build Templates (tad)",
        "category": "tad",
        "icon": "$(run)"
      },
      {
        "command": "tad.syncBuilder",
        "title": "Sync Builder (tad)",
        "category": "tad",
        "icon": "$(cloud-download)"
      },
      {
        "command": "tad.configureOpenAIApiKey",
        "title": "Configure OpenAI API Key",
        "category": "tad"
      },
      {
        "command": "tad.configureOpenRouterApiKey",
        "title": "Configure OpenRouter API Key",
        "category": "tad"
      },
      {
        "command": "tad.showChatSidebar",
        "title": "Show Chat Sidebar",
        "category": "tad"
      },
      {
        "command": "tad.openCanvas",
        "title": "Open Canvas View",
        "category": "tad",
        "icon": "$(window)"
      },
      {
        "command": "tad.clearChat",
        "title": "Clear Chat",
        "category": "tad",
        "icon": "$(clear-all)"
      },
      {
        "command": "tad.resetWelcome",
        "title": "Reset Welcome Screen",
        "category": "tad"
      },
      {
        "command": "tad.initializeProject",
        "title": "Initialize tad",
        "category": "tad"
      },
      {
        "command": "tad.openSettings",
        "title": "Open Settings",
        "category": "tad",
        "icon": "$(settings-gear)"
      },
      {
        "command": "tad.createTemplateSpace",
        "title": "Create Template Space",
        "category": "tad",
        "icon": "$(new-folder)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "tad.openCanvas",
          "when": "view == tad.chatView",
          "group": "navigation"
        },
        {
          "command": "tad.buildTemplates",
          "when": "view == tad.chatView",
          "group": "navigation@1"
        },
        {
          "command": "tad.syncBuilder",
          "when": "view == tad.chatView",
          "group": "navigation@2"
        },
        {
          "command": "tad.openSettings",
          "when": "view == tad.chatView",
          "group": "navigation"
        },
        {
          "command": "tad.clearChat",
          "when": "view == tad.chatView",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "tad.createTemplateSpace",
          "when": "explorerResourceIsFolder",
          "group": "navigation@50"
        }
      ]
    },
    "views": {
      "tad-sidebar": [
        {
          "type": "webview",
          "id": "tad.chatView",
          "name": "tad",
          "when": "true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "tad-sidebar",
          "title": "Tad",
          "icon": "icon.svg"
        }
      ]
    },
    "configuration": {
      "title": "Tad",
      "properties": {
        "tad.openaiApiKey": {
          "type": "string",
          "description": "OpenAI API key for custom agent",
          "scope": "application"
        },
        "tad.openrouterApiKey": {
          "type": "string",
          "description": "OpenRouter API key for custom agent",
          "scope": "application"
        },
        "tad.aiModelProvider": {
          "type": "string",
          "enum": [
            "openai",
            "openrouter"
          ],
          "default": "openai",
          "description": "AI model provider for custom agent (OpenAI or OpenRouter)",
          "scope": "application"
        },
        "tad.aiModel": {
          "type": "string",
          "description": "Specific AI model to use (e.g., gpt-4o, openrouter/auto)",
          "scope": "application"
        },
        "tad.nunjucks.templateRoots": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".tad/templates",
            "."
          ],
          "description": "Directories (workspace-relative) to search for Nunjucks templates (used for navigation, completion, diagnostics).",
          "scope": "resource"
        },
        "tad.nunjucks.defaultExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".njk",
            ".nunjucks",
            ".html"
          ],
          "description": "File extensions to try when resolving templates without extension.",
          "scope": "resource"
        },
        "tad.nunjucks.ignore": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**",
            ".tad/dist/**"
          ],
          "description": "Glob patterns to ignore when indexing templates.",
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "test:llm": "tsc --project tsconfig.test.json && node dist-test/test/llm-service.test.js",
    "test:core": "tsc --project tsconfig.test.json && node dist-test/test/core-components.test.js",
    "test:read": "tsc --project tsconfig.test.json && node dist-test/test/read-tool.test.js",
    "test:write-edit": "tsc --project tsconfig.test.json && node dist-test/test/write-edit-tools.test.js",
    "test:ls-grep-glob": "tsc --project tsconfig.test.json && node dist-test/test/ls-grep-glob-tools.test.js",
    "test:agent": "tsc --project tsconfig.test.json && node dist-test/test/llm-service.test.js && node dist-test/test/core-components.test.js",
    "test:tools": "tsc --project tsconfig.test.json && node dist-test/test/read-tool.test.js && node dist-test/test/write-edit-tools.test.js && node dist-test/test/ls-grep-glob-tools.test.js"
  },
  "devDependencies": {
    "@types/micromatch": "^4.0.9",
    "@types/mime-types": "^3.0.1",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.2.12",
    "@ai-sdk/google": "^1.2.19",
    "@ai-sdk/openai": "^1.3.22",
    "@openrouter/ai-sdk-provider": "^0.7.2",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "ai": "^4.3.16",
    "execa": "^9.6.0",
    "glob": "^11.0.3",
    "highlight.js": "^11.11.1",
    "lucide-react": "^0.522.0",
    "micromatch": "^4.0.8",
    "mime-types": "^3.0.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-markdown": "^10.1.0",
    "react-zoom-pan-pinch": "^3.7.0",
    "rehype-highlight": "^7.0.2",
    "remark-gfm": "^4.0.1",
    "zod": "^3.25.67"
  }
}
